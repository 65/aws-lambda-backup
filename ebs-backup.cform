{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Lambda function to backup all Ec2 EBS volumes with retention",
  "Metadata": {},
  "Parameters": {
    "S3Bucket": {
        "Description": "The S3 Bucket Name that you have the python script saved in (don't include s3:// etc)",
        "Type": "String",
        "Default": ""
    },
    "S3Key":{
        "Description": "The zip file name of the Lambda code package (i.e. a zip of the ebs-backup.py)",
        "Type": "String",
        "Default": "ebs-backup.py.zip"
    },"ScheduleExpression": {
        "Description": "Cron or Rate using UTC time of when and how oftern you want this to execute",
        "Type": "String",
        "Default": "cron(0 14 * * ? *)"
    }
    },
  "Mappings": {},
  "Conditions": {},
  "Resources": {
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "Ec2EBSandLogs",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "ec2:CreateSnapshot",
                    "ec2:CreateTags",
                    "ec2:DeleteSnapshot",
                    "ec2:DescribeInstances",
                    "ec2:DescribeSnapshots"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "BackupFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "ebs-backup.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": { "Ref": "S3Bucket" },
          "S3Key": { "Ref": "S3Key" }
        },
        "Runtime": "python3.6"
      }
    },
    "CloudwatchTrigger": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "Fires the Lambda function to find and backup EBS volumes in the account",
        "Name": "EBSBackupTrigger",
        "ScheduleExpression": { "Ref": "ScheduleExpression" },
        "Targets": [
          {
            "Arn": 
              { "Fn::GetAtt" : [ "BackupFunction", "Arn" ]},
            "Id":"TriggerBackup"
          }
        ]
      }
    }
  },
  "Outputs": {}
}